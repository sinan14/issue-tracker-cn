<div class="row mt-5">
  <div class="col-md-8 offset-md-2">
    <div class="card">
      <div class="card-body">
        <h2 class="card-title"><%= issue.title %></h2>
        <p class="card-text">Description: <%= issue.description %></p>
        <p class="card-text">
          Created by: <%= issue.author?._id == locals.userId
          ?'You':issue.author?.name %>
        </p>
        <% if (issue.labels.length) { %>
        <p>Labels: <%= issue.labels.join(',') %></p>

        <% } %>
        <div class="d-flex align-items-center" style="gap: 2px;">
          <button class="btn ">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-tag" viewBox="0 0 16 16">
              <path d="M6 4.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m-1 0a.5.5 0 1 0-1 0 .5.5 0 0 0 1 0" />
              <path d="M2 1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 1 6.586V2a1 1 0 0 1 1-1m0 5.586 7 7L13.586 9l-7-7H2z" />
            </svg>
          </button>
          <span>
            Status: <%= issue.status %>
          </span>
          <% if (issue.project?.author == locals.userId) { %>
          <button onclick="changestatus('<%= issue._id %>','<%= projectId %>')" class="btn btn-light"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
              <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
            </svg></button>

          <% } %>
        </div>

        <% if (issue.author?._id == locals.userId) { %>
        <div class=" issue-control-btns row">
          <a href="/api/issue-tracker/issues/<%= projectId %>/<%= issue._id %>/get-edit-issue" class="text-decoration-none text-black btn btn-warning">Edit</a>

        </div>
        <% } %>

      </div>
    </div>
  </div>
</div>
<input type="hidden" name="inp-issueId" id="inp-issueId" value="<%= issue._id %>" />
<script>
  function changestatus(issueId, projectId) {
    const statuses = ["open", "closed", "not-planned", "expected-behaviour", "duplicate"];
    const inputOptions = {}
    statuses.forEach((status, index) => {
      inputOptions[index] = status
    })
    Swal.fire({
      title: 'Change status to',
      input: 'select',
      inputOptions,
      inputPlaceholder: 'Select a status',
      showCancelButton: true,
      inputValidator: function(value) {
        return new Promise(function(resolve, reject) {
          if (value !== '') {
            resolve();
          } else {
            resolve('You need to select a status');
          }
        });
      }
    }).then(function(result) {
      console.log('result ', result);
      if (result.isConfirmed) {
        const status = statuses[+(result.value)];
        updateIssue(status, projectId, issueId);
      }
    });
  }
  async function updateIssue(status, projectId, issueId) {
    try {
      const options = {
        method: "PUT",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          status
        }),
      };
      const url = `/api/issue-tracker/issues/${projectId}/${issueId}/update-status`;
      const response = await fetch(url, options);
      const res = await response.json();
      if (res.success === true) {
        Swal.fire({
          title: "issue updated successfully!",
          icon: "success",
        }).then(() => {
          location.assign(`/api/issue-tracker/issues/${projectId}/${issueId}/get-issue-details`);
        })
      } else {
        Swal.fire({
          title: "Error!",
          text: res.error,
          icon: "error",
        });
      }
    } catch (err) {
      console.log('crp ', err);
      Swal.fire({
        title: "Error!",
        text: err.message,
        icon: "error",
        confirmButtonText: "Ok",
      });
    }
  };
</script>